-- Курсовой проект по MySQL
-- Тема курсовой работы "Официальный сайт МГТУ им. Н.Э. Баумана"
-- Студент g.b Волков Иван
-- Преподаватель g.b Юрий Новиков

-- Описание курсовой работы.
/* Данная база данных будет содержать информацию о официальном сайте МГТУ им. Н.Э Баумана. В нее будут включены таблицы, содержащие данные
 * о преподавателях учебного заведения, факультетах, кафедр, партнерах, медиа, расписании экзаменов. Так же будут указаны различные связи между этими таблицами.*/

-- создадим нашу базу данных
DROP DATABASE IF EXISTS baumanka;
CREATE DATABASE baumanka;
-- будем далее использовать эту базу данных
USE baumanka;
-- сделаем структуру нашей б.д

-- первая таблица это сотрудники университета(ректор, администрация, преподаватели, заведующие кафедрой и тд)
-- в таблицу будут добавлены некоторые преподаватели, которых нет на сайте, видимо из-за того, что он новый, не успели добавить
DROP TABLE IF EXISTS staff;
CREATE TABLE staff(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- имя сотрудника
	name VARCHAR(100),
	-- фамилия
	surname VARCHAR(100),
	-- отчество
	patronymic VARCHAR(100),
	-- почта
	email VARCHAR(255) UNIQUE,
	-- телефон
	phone BIGINT UNSIGNED,
	-- адрес
	address MEDIUMTEXT,
	-- биография
	biography MEDIUMTEXT,
	-- награды
	awards VARCHAR(50) DEFAULT NULL
	);

-- вторая таблица содержит данные о факультетах университета
DROP TABLE IF EXISTS faculties;
CREATE TABLE faculties(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- название факультета
	name VARCHAR(30),
	-- номер деканата факультета
	phone BIGINT UNSIGNED,
	-- почта деканата факультета
	email VARCHAR(255) UNIQUE,
	-- описание факультета
	description VARCHAR(255)
	);

-- третья таблица будет про кафедры университета
DROP TABLE IF EXISTS departments;
CREATE TABLE departments(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- название кафедры
	name VARCHAR(30),
	-- id факультета
	faculties_id BIGINT UNSIGNED NOT NULL,
	-- внешний ключ с факультетами
	FOREIGN KEY(faculties_id) REFERENCES faculties(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- четвертая таблица про преподавателей, которые работают на факультетах
DROP TABLE IF EXISTS faculties_staff;
CREATE TABLE faculties_staff(
	-- id факультета
	faculties_id BIGINT UNSIGNED NOT NULL,
	-- id преподавателя
	staff_id BIGINT UNSIGNED NOT NULL,
	-- внешний ключ для факультетов
	 FOREIGN KEY(faculties_id) REFERENCES faculties(id) ON UPDATE CASCADE ON DELETE CASCADE,
	-- внешний ключ для преподавателей
	 FOREIGN KEY(staff_id) REFERENCES staff(id) ON UPDATE CASCADE ON DELETE CASCADE,
	-- ключик :)
	PRIMARY KEY(faculties_id, staff_id)
	);

-- пятая таблица
-- специальные курсы кафедр
DROP TABLE IF EXISTS disciplines;
CREATE TABLE disciplines(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- список дисциплин
	list MEDIUMTEXT,
	-- id кафедры
	department_id BIGINT UNSIGNED NOT NULL,
	-- внешний ключ для кафедры
	FOREIGN KEY(department_id) REFERENCES departments(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- шестая таблица
-- группы кафедр
DROP TABLE IF EXISTS team;
CREATE TABLE team(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- номер и буква или просто номер
	number_letter CHAR(10),
	-- кафедра к которой относится группа
	department_id BIGINT UNSIGNED NOT NULL,
	-- внешний ключ для кафедры
	FOREIGN KEY(department_id) REFERENCES departments(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- седьмая таблица
-- расписание экзаменов на данный момент
DROP TABLE IF EXISTS exams;
CREATE TABLE exams(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- группа
	team_id BIGINT UNSIGNED NOT NULL,
	-- кафедра
	department_id BIGINT UNSIGNED NOT NULL,
	-- дата экзамена
	exam_date DATE,
	-- время экзамена
	exam_time TIME,
	-- аудитория
	auditorium CHAR(10),
	-- внешний ключ для группы
	FOREIGN KEY(team_id) REFERENCES team(id) ON UPDATE CASCADE ON DELETE CASCADE,
	-- внешний ключ для кафедры
	FOREIGN KEY(department_id) REFERENCES departments(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- восьмая таблица
-- тип медиа
DROP TABLE IF EXISTS media_type;
CREATE TABLE media_type(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- название
	name VARCHAR(20)
	);

-- девятая таблица
-- медиа
DROP TABLE IF EXISTS media;
CREATE TABLE media(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- название
	name VARCHAR(100),
	-- тип медиа(фото, видео, текст и тд)
	media_type_id BIGINT UNSIGNED NOT NULL,
	-- дата создания
	created_at DATETIME DEFAULT NOW(),
	-- внешний ключ для типа медиа
	FOREIGN KEY(media_type_id) REFERENCES media_type(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- десятая таблица
-- партнеры кафедр
DROP TABLE IF EXISTS partners;
CREATE TABLE partners(
	-- первичный ключ
	id SERIAL PRIMARY KEY,
	-- имя партнера(Яндекс, mail.ru, роскосмос и тд)
 	name VARCHAR(50),
 	-- id кафедр
	department_id BIGINT UNSIGNED NOT NULL,
	-- внешнйи ключ для кафедр
	FOREIGN KEY(department_id) REFERENCES departments(id) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- Структура б.д готова. Требование курсовой выполнено. 10 таблиц имеется

-- Следующий шаг это наполнение б.д информацией. Будем пользоваться пакетной вставкой.

-- заполним таблицу преподавателей
INSERT INTO staff(name, surname, patronymic, email, phone, address, biography, awards)
VALUES
	-- ректор
	('Михаил', 'Гордин', 'Валерьевич', 'bauman@bmstu.ru', 84992611743, 'Москва, ул. 2-ая Бауманская, д.5, Главный корпус, 397', 'Родился в Москве, в семье научных работников. Родители — выпускники МГУ и Саратовского государственного университета,
	кандидаты наук в области геофизики и геологии. Женат, воспитывает сына и двух дочерей.', DEFAULT),
	-- преподаватели кафедры иу1
	('Константин', 'Неусыпин', 'Авенирович', 'neusipin@bmstu.ru',  74992636323, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
	'доктор технических наук, профессор.', DEFAULT),
    ('Андрей', 'Масленников', 'Леонидович', 'amas@bmstu.ru', 84992636323, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
    'старший преподаватель', DEFAULT),
    ('Кирилл', 'Парфентьев', 'Викторович', 'parfentiev@bmstu.ru', 84993336323, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
    'старший преподаватель',  DEFAULT),
    ('Павел', 'Аверьянов', 'Владимирович', 'averyanov@bmstu.ru', 89035804432, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
    'старший преподаватель',  DEFAULT),
    ('Екатерина', 'Шипунова', 'Газизовна', 'shipunova@bmstu.ru', 89053463789, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
    'старший преподаватель',  DEFAULT),
    ('Николай', 'Чулин', 'Александрович', 'nchilin@bmstu.ru', 89051113249, ' 105005, г. Москва, 2-я Бауманская ул., д. 5, стр. 1, ГУК, 6 этаж.',
    'кандидат технических наук, доцент.',  DEFAULT),
    -- преподаватели кафедры фн4
    ('Наталия', 'Денцель', 'Константиновна', 'denzel@bmstu.ru', 83567891112, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'ассистент', DEFAULT),
	 ('Евгений', 'Денцель', 'Станиславович', 'denzel2@bmstu.ru', 83497235648, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'ассистент', DEFAULT),
	 ('Григорий', 'Змиевской', 'Николаевич', 'zmievskoy@bmstu.ru', 81235615327, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'доцент(к.н)', DEFAULT),
	('Владимир', 'Борута', 'Сергеевич', 'boruta@bmstu.ru', 81691254768, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'доцент(к.н)', DEFAULT),
	('Виктор', 'Левин', 'Петрович', 'levin@bmstu.ru', 81643278833, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'доцент(к.н)', DEFAULT),
	('Алексей', 'Лобойко', 'Андреевич', 'loboiko@bmstu.ru', 81547652348, 'Учебно-лабораторный корпус МГТУ им. Н.Э.Баумана
	2/18, Рубцовская наб., Москва, 105005, Россия', 'ассистент', DEFAULT),
	-- преподаватели кафедры Э4
	('Алексей', 'Архаров', 'Михайлович', 'arra@bmstu.ru', 89443335129, 'Здание энерго', 'профессор', DEFAULT),
	('Виталий', 'Бондаренко', 'Леонидович', 'bondarenko@bmstu.ru', 89098723764, 'Здание энерго', 'профессор', DEFAULT),
	('Николай', 'Лавров', 'Алексеевич', 'lavrov@bmstu.ru', 89127356996, 'Здание энерго', 'доцент(к.н)', DEFAULT),
	('Екатерина', 'Навасардян', ' Сергеевна', 'dhjask@bmstu.ru', 81153245327, 'Здание энерго', 'старший преподаватель', DEFAULT),
	('Виктор', 'Семенов', ' Юрьевич', 'semenov@bmstu.ru', 89028732367, 'Здание энерго', 'доцент(к.н)', DEFAULT),
	('Юрий', 'Фролов', 'Дмитриевич', 'frolov@bmstu.ru', 89161748551, 'Здание энерго', 'профессор', DEFAULT),
	-- преподаватели кафедры МТ12
	('Александр', 'Богданов', 'Владимирович', 'bogdanov@bmstu.ru', 87899871514, 'Корпус МТ', 'доцент(к.н)', DEFAULT),
	('Юрий', 'Голубенко', 'Владимирович', 'golubenko@bmstu.ru', 85677653443, 'Корпус МТ', 'доцент(к.н)', DEFAULT),
	('Александр', 'Григорьянц', 'Григорьевич', 'grrr@bmstu.ru', 81233215454, 'Корпус МТ', 'заведующий кафедрой', DEFAULT),
	('Юрий', 'Иванов', 'Владимирович', 'ivanov@bmstu.ru', 89778116278, 'Корпус МТ', 'старший преподаватель', DEFAULT),
	('Леонид', 'Майоров', 'Николаевич', 'mrl12e3@bmstu.ru', 89031815289, 'Корпус МТ', 'доцент(к.н)', DEFAULT),
	('Игорь', 'Шиганов', 'Николаевич', 'shiganov@bmstu.ru', 86541258263, 'Корпус МТ', 'профессор', DEFAULT),
	-- преподаватели кафедры РК4
	('Борис', 'Абрамов', 'Николаевич', 'abramov@bmstu.ru', 828361772643, 'Корпус РК', 'доцент(к.н)', DEFAULT),
    ('Сергей', 'Гнездилов', 'Геннадьевич', 'gnezdilov@bmstu.ru', 85674326538, 'Корпус РК', 'доцент(к.н)', DEFAULT),
    ('Вячеслав', 'Зуев', 'Александрович', 'zuev@bmstu.ru', 89173487542, 'Корпус РК', 'доцент(к.н)', DEFAULT),
	('Дмитрий', 'Пармузин', 'Борисович', 'parmuzin@bmstu.ru', 89876543217, 'Корпус РК', 'доцент(к.н)', DEFAULT),
	('Александр', 'Ромашко', 'Мефодиевич', 'meffod@bmstu.ru', 83468912121, 'Корпус РК', 'доцент(к.н)', DEFAULT),
	('Андрей', 'Савельев', 'Геннадьевич', 'sava@bmstu.ru', 89998882634, 'Корпус РК', 'профессор', DEFAULT);

-- заполним таблицу факультетов
INSERT INTO faculties(id, name, phone, email, description)
VALUES
	(1, 'Информатика, искусственный интеллект и системы управления', 84992636216, 'dekanatiu@bmstu.ru', 'Ведущий факультет по подготовке кадров в области
	искусственного интеллекта, обработки больших данных, разработки программного обеспечения, защиты информации.'),
	(2, 'Фундаментальные науки', 84992636473, 'dekan-fn@mail.ru', 'Научно-учебный комплекс «Фундаментальные науки» обеспечивает единую методическую
    направленность работы учебных подразделений, осуществляющих математическую и естественно-научную подготовку студентов.'),
    (3, 'Энергомашиностроение', 84992636516, 'energo@bmstu.ru', 'Факультет с 1868 года готовит ученых, проектировщиков, конструкторов и испытателей энергетических устройств.'),
    (4, 'Машиностроительные технологии', 84992615225, 'nukmt@bmstu.ru', 'Факультет основан в 1868 году. На 13 кафедрах представлен весь спектр технологических
	направлений обработки материалов, изготовления деталей и обеспечения их качества.'),
	(5, 'Робототехника и комплексная автоматизация', 84992636515, 'mt@bmstu.ru', 'Факультет основан в 1987 году как ответ на общемировые тенденции развития наукоемких отраслей промышленности.');

-- заполним таблицу кафедр
INSERT INTO departments(id, name, faculties_id)
VALUES
	(1, 'ИУ1', 1),
	(2, 'ФН4', 2),
	(3, 'Э4', 3),
	(4, 'МТ12', 4),
	(5, 'РК4', 5);

-- этим запросом проверю, что логика правильная
SELECT d.name, f.name
FROM departments d
JOIN faculties f
ON d.faculties_id = f.id;

-- заполню таблицу с преподавателями и факультетами, на которых они работают
INSERT INTO faculties_staff
VALUES
	(1, 2),
	(1, 3),
	(1, 4),
	(1, 5),
	(1, 6),
	(1, 7),
	(2, 8),
	(2, 9),
	(2, 10),
	(2, 11),
	(2, 12),
	(2, 13),
	(3, 14),
	(3, 15),
	(3, 16),
	(3, 17),
	(3, 18),
	(3, 19),
	(4, 20),
	(4, 21),
	(4, 22),
	(4, 23),
	(4, 24),
	(4, 25),
	(5, 26),
	(5, 27),
	(5, 28),
	(5, 29),
	(5, 30),
	(5, 31);

-- заполним таблицу со специальными дисциплинами каждой кафедры
INSERT INTO disciplines
VALUES
	(1, 'Интеллектуальные системы, Системы управления летательными аппаратами, Системы управления космическими аппаратам', 1),
	(2, 'Экспериментальные методы исследований, Вычислительная физика, Теория горения и взрыва' ,2),
	(3, 'Вычислительная газогидродинамика, Производство редких газов, Криомедицинская техника' ,3),
	(4, 'Теоретические основы лазерной обработки, Технологии обработки концентрированными потоками энергии,Технология лазерной обработки', 4),
	(5, 'Конструкции наземных транспортно-технологических средств, Технологии машиностроения, Конструирование элементов грузоподъемных машин' ,5);

-- заполним таблицу с группами на кафедрах
INSERT INTO team
VALUES
	(1, 'ИУ1-31', 1),
	(2, 'ИУ1-32', 1),
	(3, 'ИУ1-33', 1),
	(4, 'ФН4-31', 2),
	(5, 'ФН4-32', 2),
	(6, 'ФН4-33', 2),
	(7, 'Э4-31', 3),
	(8, 'Э4-32', 3),
	(9, 'Э4-33', 3),
	(10, 'МТ12-31', 4),
	(11, 'МТ12-32', 4),
	(12, 'МТ12-33', 4),
	(13, 'РК4-31', 5),
	(14, 'РК4-32', 5),
	(15, 'РК4-33', 5);

-- заполним таблицу с расписанием экзаменов
INSERT INTO exams
VALUES
	(1, 1, 1, '2022-01-21', '09:00:00', '1013л'),
	(2, 2, 1, '2022-01-23', '09:00:00', '1035л'),
	(3, 3, 1, '2022-01-25', '14:00:00', '1021л'),
	(4, 4, 2, '2022-01-11', '09:00:00', '325'),
	(5, 5, 2, '2022-01-13', '18:00:00', '323'),
	(6, 6, 2, '2022-01-19', '12:00:00', '327'),
	(7, 7, 3, '2022-01-12', '09:00:00', '218л'),
	(8, 8, 3, '2022-01-15', '09:00:00', '257л'),
	(9, 9, 3, '2022-01-24', '09:00:00', '220л'),
	(10, 10, 4, '2022-01-18', '11:00:00', '423'),
	(11, 11, 4, '2022-01-21', '12:00:00', '428'),
	(12, 12, 4, '2022-01-15', '09:00:00', '427'),
	(13, 13, 5, '2022-01-13', '15:00:00', '921л'),
	(14, 14, 5, '2022-01-16', '13:00:00', '935л'),
	(15, 15, 5, '2022-01-18', '12:00:00', '946л');

-- заполним таблицу с типом медиа на сайте
INSERT INTO media_type
VALUES
	(1, 'Video'),
	(2, 'Photo'),
	(3, 'Post');

-- заполним таблицу с медиа
INSERT INTO media
VALUES
	(1, 'Конгресс молодых учёных в Сочи завершился', 3, '2021-12-10 14:00:00'),
	(2, 'МГТУ на заключительном мероприятии Года науки и технологий в Сочи', 3, '2021-12-08 09:00:00'),
	(3, 'Роскосмос планирует запустить в 2022 году 20 микроспутников для образовательных программ', 3, '2021-12-10 10:00:00'),
	(4, 'Покорители космоса', 1, '2021-12-05 11:00:00'),
	(5, 'Жизнь в науке', 1, '2021-11-25 13:00:00'),
	(6, 'Опережая время', 1, '2021-10-14 15:00:00');

-- заполним таблицу с партнерами кафедр
INSERT INTO partners
VALUES
	(1, 'Сбербанк', 1),
	(2, 'Яндекс', 1),
	(3, 'ЦЭНКИ', 1),
	(4, 'Роскосмос', 1),
	(5, 'Энергия', 3),
	(6, 'Газпром', 3),
	(7, 'Лазеры и аппаратура ТМ', 4),
	(8, 'Московский центр лазерных технологий', 4),
	(9, 'КамАЗ', 5),
	(10, 'АвтоВАЗ', 5);

-- Выполним следующий пункт курсовой работы.Скрипты характерных выборок.

-- Задача 1. Вывести количество медиа с типом видео.
SELECT
-- выводим название типа медиа
mt.name,
-- количество
COUNT(*) as number_of_videos
-- таблица медиа
FROM media m
-- соединяем с таблицей типов медиа
JOIN media_type mt
-- столбец media_type_id из таблицы media должен совпадать со столбцом id из таблицы mt
ON m.media_type_id = mt.id
-- где тип медиа = 1, т.е видео
WHERE mt.id = 1;

-- Задача 2. Вывести названия всех кафедр, у которых экзамен проходит в аудиториях с окончанием на 'л'.
-- Сделаю эту задачу через вложенный запрос.
SELECT
-- выводим id кафедры
first_table.department_id,
-- выводим имя кафедры
d.name
FROM
(SELECT
-- группы
e.team_id as team_id,
-- кафедры
e.department_id as department_id,
-- дата экзамена
e.exam_date as exam_date ,
-- время экзамена
e.exam_time as exam_time ,
-- номер аудитории
e.auditorium l_auditorium
-- из таблицы exams, где аудитории оканчиваются на 'л'
FROM exams e WHERE auditorium LIKE '%л') as first_table
-- соединяем  с таблицей кафедр
JOIN departments d
-- где id совпадают
ON first_table.department_id = d.id
-- группируем одинаковые названия
GROUP BY d.name;

-- Задача 3. Вывести почты всех преподавателей, которые работают на факультете 'Фундаментальные науки'
SELECT
-- выводим почты
s.email
-- таблица факультетов с преподавателями
FROM faculties_staff fs
-- присоединяем таблицу преподавателей, где есть их почты
JOIN staff s
-- приравниваем id
ON s.id = fs.staff_id
-- пишем условие, что только для факультета с id = 2, т.е для 'Фундаментальные науки'
WHERE fs.faculties_id = 2;

-- Задача 4. Вывести название ФАКУЛЬТЕТА/ФАКУЛЬТЕТОВ(не кафедру), с которым/которыми сотрудничает 'Газпром'
-- Сделаю через вложенные запросы. Конечно, через JOIN сделать проще, но хочу показать именно вложенные запросы
SELECT
-- выводим имя факультета/факультетов
(SELECT name FROM faculties f WHERE f.id = d.faculties_id) as faculties
FROM
-- таблица кафедр
departments d
-- где id совпадает с id в таблице partners, в которой имя парнера 'Газпром'
WHERE d.id IN (SELECT p.department_id FROM partners p WHERE name = 'Газпром');

-- Задача 5. Вывести названия всех групп, у которых экзамен в 9 утра
SELECT
-- время экзамена
e.exam_time,
-- названия групп
t.number_letter
-- из таблицы экзаменов
FROM exams e
-- соединяем с таблицей групп
JOIN team t
-- приравниваем id
ON t.id = e.team_id
-- условие, что в 9 утра
WHERE exam_time LIKE '09:%';

-- Задача 6. Вывести количество профессоров на кафедре Э4.
SELECT
-- количество профессоров
COUNT(*) as number_of_professors
-- таблица кафедр
FROM departments d
-- соединяем с таблицей факультетов/преподавателей
JOIN faculties_staff fs
-- приравниваем id
ON fs.faculties_id = d.faculties_id
-- присоединяем таблицу преподавателей
JOIN staff s
-- приравниваем id
ON fs.staff_id = s.id
-- условие, что название кафедры 'Э4'и что профессор
WHERE d.name = 'Э4' AND s.biography = 'профессор';

-- Следующий пункт. Это представления.
-- Представление, в которым факультеты и кафедры принадлежащие им
-- № 1
CREATE OR REPLACE VIEW first_view
AS SELECT
f.name as faculties,
d.name as departments
FROM faculties f
JOIN departments d
ON d.faculties_id = f.id ;

SELECT faculties, departments FROM first_view;

-- №2
-- Представление, в котором хранятся номера телефонов всех преподавателей
CREATE OR REPLACE VIEW second_view
AS SELECT
s.phone
FROM staff s;

SELECT phone FROM second_view;
-- в таблицах есть эти представления
SHOW TABLES;

-- Последний пункт. Хранимые процедуры/триггеры
-- Первая процедура
DROP PROCEDURE IF EXISTS my_procedure_1;
DELIMITER //
CREATE PROCEDURE my_procedure_1(IN value INT)
BEGIN
	 -- первая переменная
	 DECLARE variable1 INT DEFAULT 0;
	 -- вторая перемнная
	 DECLARE variable2 INT DEFAULT 1;

	-- если передаваемое число равно 0, то выводим кафедры
    IF value = variable1 THEN
    	SELECT d.name FROM departments d;
    -- если передаваемое число равно 1, то выводим партнеров
    ELSEIF value = variable2 THEN
        SELECT p.name FROM partners p;
    -- во всех остальных случаях
    ELSE
    	SELECT 'Число не ноль и не единица';
    END IF;
END//
DELIMITER ;
-- вызов процедуры
CALL my_procedure_1(1);

-- Вторая процедура.
DROP PROCEDURE IF EXISTS my_procedure_2;
DELIMITER //
CREATE PROCEDURE my_procedure_2(IN input_number INT, OUT out_number FLOAT)
BEGIN
	-- квадратный корень
	SET out_number=SQRT(input_number);
END//
DELIMITER ;
-- вызов процедуры
CALL my_procedure_2(8, @out_value);
-- результат
SELECT @out_value;

-- Триггеры.
DROP TRIGGER IF EXISTS departments_count;
DELIMITER //
-- создает триггер после
CREATE TRIGGER departments_count AFTER
-- вставки в таблицу departments
INSERT ON departments
FOR EACH ROW
BEGIN
	-- выводит количество
	SELECT COUNT(*) INTO @total
	FROM departments;
END//

DELIMITER ;

DROP TRIGGER IF EXISTS name_faculties;
DELIMITER //
-- создает триггер до
CREATE TRIGGER name_faculties BEFORE
-- обновления таблицы faculties
UPDATE ON faculties
FOR EACH ROW
BEGIN
	-- выводит названия факультетов
	SELECT f.name INTO @param
	FROM faculties f ;
END//

DELIMITER ;
